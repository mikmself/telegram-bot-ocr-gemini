# ============================================================================
# ENVIRONMENT CONFIGURATION TEMPLATE
# SmartGov Gemini Bot - OCR untuk Kartu Keluarga Indonesia
# ============================================================================
#
# INSTRUKSI PENGGUNAAN:
# 1. Copy file ini menjadi .env
# 2. Isi semua nilai yang diperlukan
# 3. Jangan commit file .env ke repository (sudah ada di .gitignore)
# 4. Untuk production, gunakan environment variables yang aman
#
# ============================================================================

# ============================================================================
# TELEGRAM BOT CONFIGURATION
# ============================================================================
# Token bot dari @BotFather di Telegram
# Format: 1234567890:ABCdefGHIjklMNOpqrsTUVwxyz
# Cara mendapatkan: Chat dengan @BotFather, gunakan /newbot
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# ============================================================================
# GOOGLE GEMINI AI CONFIGURATION
# ============================================================================
# API Key untuk Google Gemini AI
# Cara mendapatkan: https://makersuite.google.com/app/apikey
# PENTING: Monitor quota dan billing untuk menghindari biaya tak terduga
GEMINI_API_KEY=your_gemini_api_key_here

# Model Gemini yang digunakan (opsional)
# Pilihan: gemini-2.5-flash (default), gemini-2.5-pro, gemini-1.5-pro
# gemini-2.5-flash: Paling cepat, cocok untuk OCR
# gemini-2.5-pro: Lebih akurat, lebih lambat dan mahal
GEMINI_MODEL=gemini-2.5-flash

# ============================================================================
# DATABASE CONFIGURATION (MySQL)
# ============================================================================
# Hostname atau IP address server MySQL
# Default: 127.0.0.1 (localhost)
# Untuk Docker: gunakan nama service container (contoh: mysql)
DB_HOST=127.0.0.1

# Port MySQL server
# Default: 3320
# Standard MySQL port: 3306
DB_PORT=3320

# Nama database
# Default: smartgov
# Database harus sudah dibuat sebelum menjalankan aplikasi
DB_DATABASE=smartgov

# Username untuk autentikasi database
# Default: root
# Untuk production: gunakan user dengan privilege minimal
DB_USERNAME=root

# Password untuk autentikasi database
# Default: (kosong)
# PENTING: Gunakan password yang kuat di production
DB_PASSWORD=your_database_password_here

# ============================================================================
# REGION API CONFIGURATION
# ============================================================================
# Base URL endpoint API wilayah Indonesia
# Default: https://api.example.com
# Ganti dengan URL API wilayah yang sebenarnya
# Contoh: https://wilayah-api.smartgov.id/api/v1
REGION_API_URL=https://api.example.com

# API Key untuk autentikasi ke Region API (opsional)
# Beberapa API wilayah memerlukan API key
# Jika tidak diperlukan, kosongkan saja
REGION_API_KEY=your_region_api_key_here

# ============================================================================
# SESSION MANAGEMENT CONFIGURATION
# ============================================================================
# Durasi session sebelum expired (dalam jam)
# Default: 24 jam
# Untuk data sensitif, disarankan 4-8 jam
SESSION_EXPIRE_HOURS=24

# Jumlah rounds untuk bcrypt hashing
# Default: 10
# Rekomendasi: 10 (standar), 12 (lebih aman), 8 (hanya development)
# CATATAN: Tidak bisa diubah setelah password di-hash
BCRYPT_ROUNDS=10

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================
# Level logging yang akan dicatat
# Pilihan: debug, info, warn, error
# Development: debug (detail lengkap)
# Production: info atau warn (mengurangi disk usage)
LOG_LEVEL=info

# Direktori tempat menyimpan file log
# Default: ./logs
# Pastikan aplikasi memiliki write permission
LOG_DIR=./logs

# ============================================================================
# OCR PROCESSING CONFIGURATION
# ============================================================================
# Threshold minimum confidence score untuk menerima hasil OCR (dalam %)
# Default: 80%
# Threshold tinggi (90-95%): Lebih akurat, lebih banyak reject
# Threshold sedang (80-85%): Balance antara akurasi dan acceptance rate
# Threshold rendah (60-70%): Lebih banyak diterima, risiko error tinggi
OCR_CONFIDENCE_THRESHOLD=80

# Jumlah maksimal retry jika OCR gagal
# Default: 2
# Total percobaan: 1 awal + 2 retry = 3 kali
# CATATAN: Setiap retry mengkonsumsi quota Gemini API
OCR_MAX_RETRIES=2

# Timeout untuk request OCR ke Gemini API (dalam milliseconds)
# Default: 30000ms (30 detik)
# Pertimbangkan ukuran gambar dan koneksi internet
OCR_TIMEOUT=30000

# ============================================================================
# FILE UPLOAD CONFIGURATION
# ============================================================================
# Ukuran maksimal file yang diizinkan (dalam bytes)
# Default: 10485760 bytes (10 MB)
# 5 MB = 5242880 bytes
# 10 MB = 10485760 bytes
# 20 MB = 20971520 bytes
# CATATAN: File besar memperlambat proses OCR
MAX_FILE_SIZE=10485760

# Direktori temporary untuk menyimpan file upload
# Default: ./temp
# File foto disimpan sementara sebelum diproses OCR
# PENTING: Pastikan direktori ada dan writable
TEMP_DIR=./temp

# ============================================================================
# ENVIRONMENT CONFIGURATION
# ============================================================================
# Environment mode aplikasi
# Pilihan: development, production, test
# Default: production
# development: Verbose logging, error details ditampilkan
# production: Minimal logging, error generic untuk security
# test: Untuk unit testing, mock external services
NODE_ENV=production

# ============================================================================
# CATATAN PENTING
# ============================================================================
#
# 1. SECURITY:
#    - Jangan commit file .env ke repository
#    - Gunakan password yang kuat untuk production
#    - Monitor quota dan billing API
#    - Regular update dependencies
#
# 2. DATABASE:
#    - Pastikan MySQL server running
#    - Database 'smartgov' sudah dibuat
#    - User memiliki privilege yang diperlukan
#    - Setup backup rutin
#
# 3. API KEYS:
#    - Telegram Bot Token: Dapatkan dari @BotFather
#    - Gemini API Key: Dapatkan dari Google AI Studio
#    - Region API: Sesuaikan dengan provider yang digunakan
#
# 4. PERFORMANCE:
#    - Sesuaikan connection pool dengan kapasitas server
#    - Monitor log file size dan setup rotation
#    - Tune OCR confidence threshold berdasarkan kebutuhan
#    - Setup monitoring untuk error rates
#
# 5. DEPLOYMENT:
#    - Gunakan environment variables di production
#    - Setup process manager (PM2, systemd)
#    - Configure reverse proxy jika diperlukan
#    - Setup SSL/TLS untuk HTTPS
#
# ============================================================================
